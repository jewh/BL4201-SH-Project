
# As for dynamic inputs we wish to put the entire directory into one input list, require another settings generator.py

import os as os
from os.path import isfile, join
import shutil

instances = 10  # number of instances generated by Network Generator.py

current_directory = os.path.dirname(os.path.realpath(__file__))

files = [f for f in os.listdir(current_directory) if isfile(join(current_directory, f))]
files.remove("dynamicsettingsgenerator.py")  # so returns a list of all files in directory except itself
if "desktop.ini" in files:
    files.remove("desktop.ini")


# ___________________________________________Above works as intended __________________________________________________

# Now begin to iteratively change Banjo settings files with the names of each file in the directory:

# Define a function that removes .txt suffices from file names, and replaces spaces with _

def remove_txt(path):
    file = os.path.basename(path)
    out = os.path.splitext(file)
    final = out[0].replace(' ', '_')
    return final

# Now want a string with the files in the directory as a comma-delimited list, so define function that does that

def list_to_string(input):
    # initialise with empty string
    out = ""
    for i in range(0, len(input)-2):
        obj = input[i]
        out += f"{obj}, "
    out += f"{input[len(input)-1]}"
    return out

# desire the network instance this associates with, so get instance with the following function:
def between(string, string1, string2):
    start = string.index(string1)
    end = string.index(string2)
    if start <= end:
        out = float(string[start+len(string1):end])
    else:
        out = float(string[end+len(string2):start])
    return out

# Now get the list of files as a string

input = list_to_string(files)

# And get the instance now (assuming all files in directory of the same instance)

inst = int(between(files[0], " in", ".txt"))

# Specify the location of the template settings file using this variable:

template = "settings.txt"


# First open the banjo settings template file, make a copy, edit that copy

filein = open(template, 'r')
# now copy
shutil.copy2(template,
             f"{current_directory}/settings/allfiledynamicsettings_in{inst}.txt")
# This works
# now load the copy and edit it
fileout = open(f"{current_directory}/settings/allfiledynamicsettings_in{inst}.txt", 'w+')
for line in filein:
    fileout.write(line.replace("Positive control extinction network n6 L15 N4.0 I1000 in0",
                               f"Song Bird Data").replace(
        "inputDirectory = /Users/james/", f"inputDirectory = {current_directory}").replace(
        "observationsFile = Extinction Network Positive Control extinction network with n6 L15 N4 I1000 in0.txt",
        f"observationsFile = {input}").replace("outputDirectory = Users/james",
        f"outputDirectory = {current_directory}/BanjoOutputs").replace("reportFile = static.report.txt",
        f"reportFile = dynamic.combinedin{inst}dReport.txt"))
filein.close()
fileout.close()
